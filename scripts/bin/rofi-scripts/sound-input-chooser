#!/usr/bin/env bash

# Set up locale and IFS to handle special characters and spaces
LANG="en_US.utf8"
IFS=$'\n'

# Select a notification command: notify-send, dunstify, or fallback to /bin/false if none are available
if command -v notify-send > /dev/null 2>&1; then
    SEND="notify-send"
elif command -v dunstify > /dev/null 2>&1; then
    SEND="dunstify"
else
    SEND="/bin/false"
fi

# Check if a device description was passed as an argument
if [ "$@" ]; then
    # Save the device description from the selected input
    desc="$*"

    # Find the device name that matches the description
    device=$(pactl list sources | grep -C2 -F "Description: $desc" | grep Name | cut -d: -f2 | xargs)

    # Try to set the default input to the selected device
    if pactl set-default-source "$device"; then
        # Notify success
        $SEND -t 2000 -r 2 -u low "Activated Input: $desc"
    else
        # Notify failure
        $SEND -t 2000 -r 2 -u critical "Error activating input: $desc"
    fi
else
    # If no argument, list all available input devices (sources) with descriptions
    echo -en "\x00prompt\x1fSelect Input\n"
    for x in $(pactl list sources | grep -ie "description:" | cut -d: -f2 | sort); do
        echo "$x" | xargs
    done
fi

